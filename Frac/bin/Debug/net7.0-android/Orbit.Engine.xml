<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Orbit.Engine</name>
    </assembly>
    <members>
        <member name="T:Orbit.Engine.GameObject">
            <summary>
            Base class definition representing an object in a game.
            </summary>
        </member>
        <member name="T:Orbit.Engine.GameObjectContainer">
            <summary>
            Base class implementation for containing <see cref="T:Orbit.Engine.GameObject"/> children.
            </summary>
        </member>
        <member name="M:Orbit.Engine.GameObjectContainer.Add(Orbit.Engine.GameObject)">
            <inheritdoc />
        </member>
        <member name="M:Orbit.Engine.GameObjectContainer.Remove(Orbit.Engine.GameObject)">
            <inheritdoc />
        </member>
        <member name="M:Orbit.Engine.GameObjectContainer.Render(Microsoft.Maui.Graphics.ICanvas,Microsoft.Maui.Graphics.RectF)">
            <inheritdoc />
        </member>
        <member name="M:Orbit.Engine.GameObjectContainer.Update(System.Double)">
            <inheritdoc />
        </member>
        <member name="T:Orbit.Engine.GameScene">
            <summary>
            Base class definition representing a scene or level in a game.
            </summary>
        </member>
        <member name="M:Orbit.Engine.GameScene.OnGameObjectAdded(Orbit.Engine.GameObject)">
            <inheritdoc />
        </member>
        <member name="P:Orbit.Engine.GameSceneManager.State">
            <inheritdoc />
        </member>
        <member name="E:Orbit.Engine.GameSceneManager.StateChanged">
            <inheritdoc />
        </member>
        <member name="M:Orbit.Engine.GameSceneManager.LoadScene``1(Orbit.Engine.GameSceneView)">
            <inheritdoc />
        </member>
        <member name="M:Orbit.Engine.GameSceneManager.FindCollision(Orbit.Engine.GameObject)">
            <inheritdoc />
        </member>
        <member name="M:Orbit.Engine.GameSceneManager.GameOver">
            <inheritdoc />
        </member>
        <member name="M:Orbit.Engine.GameSceneManager.Pause">
            <inheritdoc />
        </member>
        <member name="M:Orbit.Engine.GameSceneManager.Start">
            <inheritdoc />
        </member>
        <member name="M:Orbit.Engine.GameSceneManager.Stop">
            <inheritdoc />
        </member>
        <member name="T:Orbit.Engine.IGameObject">
            <summary>
            Interface definition representing an object in a game.
            </summary>
        </member>
        <member name="M:Orbit.Engine.IGameObjectContainer.Add(Orbit.Engine.GameObject)">
            <summary>
            Adds the supplied <paramref name="gameObject"/> to this <see cref="T:Orbit.Engine.IGameObjectContainer"/>.
            This will include it for updates when the game is running.
            </summary>
            <param name="gameObject">The new <see cref="T:Orbit.Engine.GameObject"/> to add to the scene.</param>
        </member>
        <member name="M:Orbit.Engine.IGameObjectContainer.Remove(Orbit.Engine.GameObject)">
            <summary>
            Removes the supplied <paramref name="gameObject"/> from this <see cref="T:Orbit.Engine.IGameObjectContainer"/>.
            </summary>
            <param name="gameObject">The existing <see cref="T:Orbit.Engine.GameObject"/> to remove from the scene.</param>
        </member>
        <member name="T:Orbit.Engine.IGameScene">
            <summary>
            Interface definition representing a scene or level in a game.
            </summary>
        </member>
        <member name="P:Orbit.Engine.IGameSceneManager.State">
            <summary>
            Gets the state of the current <see cref="T:Orbit.Engine.IGameScene"/>.
            </summary>
        </member>
        <member name="E:Orbit.Engine.IGameSceneManager.StateChanged">
            <summary>
            Event raised when the <see cref="P:Orbit.Engine.IGameSceneManager.State"/> property changes.
            </summary>
        </member>
        <member name="M:Orbit.Engine.IGameSceneManager.LoadScene``1(Orbit.Engine.GameSceneView)">
            <summary>
            Loads the supplied <typeparamref name="TScene"/> into the supplied <paramref name="gameSceneView"/>.
            Note that for each scene that is loaded a new <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceScope"/> will be created.
            </summary>
            <typeparam name="TScene">An implementation of <see cref="T:Orbit.Engine.IGameScene"/> to load into the supplied <paramref name="gameSceneView"/></typeparam>
            <param name="gameSceneView">The destination <see cref="T:Orbit.Engine.GameSceneView"/> to display.</param>
        </member>
        <member name="T:Orbit.Engine.IRender">
            <summary>
            Interface definition representing something that can be rendered on screen.
            </summary>
        </member>
        <member name="M:Orbit.Engine.IRender.Render(Microsoft.Maui.Graphics.ICanvas,Microsoft.Maui.Graphics.RectF)">
            <summary>
            Provides this implementation with the ability to render anything it needs to on screen.
            </summary>
            <remarks>
            Consider this method the process of converting between your state which should be updated in <see cref="M:Orbit.Engine.IUpdate.Update(System.Double)"/>
            and the actual display on screen for the user to see.
            </remarks>
            <param name="canvas">The <see cref="T:Microsoft.Maui.Graphics.ICanvas"/> implementation to render on.</param>
            <param name="dimensions">The dimensions of the canvas, this allows for calculating where exactly you wish to render.</param>
        </member>
        <member name="T:Orbit.Engine.IUpdate">
            <summary>
            Interface definition representing something that can have it's state updated.
            </summary>
        </member>
        <member name="M:Orbit.Engine.IUpdate.Update(System.Double)">
            <summary>
            Updates this implementation as part of the game loop.
            </summary>
            <remarks>
            When the <see cref="T:Orbit.Engine.GameState"/> is <see cref="F:Orbit.Engine.GameState.Started"/> then expect to be called on each frame.
            </remarks>
            <param name="millisecondsSinceLastUpdate">The number of milliseconds since update was last called.</param>
        </member>
        <member name="M:Orbit.Engine.MauiAppBuilderExtensions.UseOrbitEngine(Microsoft.Maui.Hosting.MauiAppBuilder)">
            <summary>
            Registers to use the Orbit game engine.
            </summary>
            <param name="mauiAppBuilder">The <see cref="T:Microsoft.Maui.Hosting.MauiAppBuilder"/> to register against.</param>
            <returns>The supplied <paramref name="mauiAppBuilder"/>.</returns>
        </member>
    </members>
</doc>
